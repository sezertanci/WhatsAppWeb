<div class="row hidden" id="divLogin">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <ul class="nav nav-tabs justify-content-center" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="login-tab" data-bs-toggle="tab" data-bs-target="#login" type="button" role="tab" aria-controls="home" aria-selected="true">Giriş Yap</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="register-tab" data-bs-toggle="tab" data-bs-target="#register" type="button" role="tab" aria-controls="profile" aria-selected="false">Kayıt Ol</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="login" role="tabpanel" aria-labelledby="login-tab">
                <br />
                <div class="row">
                    <div class="col-md-2"></div>
                    <div class="col-md-8">
                        <form>
                            <div class="form-group">
                                <label for="txtPhoneNumber">Telefon Numarası</label>
                                <input type="text" class="form-control" id="txtPhoneNumber" aria-describedby="PhoneNumberHelp" placeholder="(_ _ _) _ _ _  _ _  _ _" required>
                                <small id="PhoneNumberHelp" class="form-text text-muted">Telefon numaranızı başında 0 olmadan giriniz.</small>
                            </div>
                            <br />
                            <div class="form-group">
                                <label for="txtPassword">Şifre</label>
                                <input type="password" class="form-control" id="txtPassword" placeholder="******" required>
                                <small id="PhoneNumberHelp" class="form-text text-muted">Şifreniz en az 6 en çok 50 karakter olmalıdır.</small>
                            </div>
                            <br />
                            <button type="button" class="btn btn-outline-primary" style="width:100%" id="btnLogin">Giriş Yap</button>
                        </form>
                    </div>
                    <div class="col-md-2"></div>
                </div>
            </div>
            <div class="tab-pane fade" id="register" role="tabpanel" aria-labelledby="register-tab">
                <br />
                <div class="row">
                    <div class="col-md-2"></div>
                    <div class="col-md-8">
                        <form>
                            <div class="form-group">
                                <label for="txtPhoneNumber">Telefon Numarası</label>
                                <input type="text" class="form-control" id="txtPhoneNumberR" aria-describedby="PhoneNumberHelp" placeholder="(_ _ _) _ _ _  _ _  _ _" required>
                                <small id="PhoneNumberHelp" class="form-text text-muted">Telefon numaranızı başında 0 olmadan giriniz.</small>
                            </div>
                            <br />
                            <div class="form-group">
                                <label for="txtName">Kullanıcı Adı</label>
                                <input type="text" class="form-control" id="txtNameR" aria-describedby="NameHelp" placeholder="" required>
                                <small id="NameHelp" class="form-text text-muted">Kullanıcı adı en fazla 50 karakter olamalıdır.</small>
                            </div>
                            <br />
                            <div class="form-group">
                                <label for="txtPassword">Şifre</label>
                                <input type="password" class="form-control" id="txtPasswordR" placeholder="******" required>
                                <small id="PhoneNumberHelp" class="form-text text-muted">Şifreniz en az 6 en çok 50 karakter olmalıdır.</small>
                            </div>
                            <br />
                            <button type="button" class="btn btn-outline-primary" style="width:100%" id="btnRegister">Kayıt Ol</button>
                        </form>
                    </div>
                    <div class="col-md-2"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4"></div>
</div>

<div class="row hidden" id="divMain">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <div class="row">
            <div class="col-md-4 divChatBackground divChatsLeftRadius">
                <div class="row divTitle">
                    <div class="col-md-6 divChatText">Sohbetler</div>
                    <div class="col-md-6">
                        <div class="dropdown" style="float:right">
                            <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                            <ul class="dropdown-menu dropdown-menu-end" data-bs-display="static">
                                <li><button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#mdlChatUserFriends">Yeni Sohbet</button></li>
                                <li><button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#mdlUserFriend">Arkadaş Ekle</button></li>
                                <li><button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#mdlUserGroup">Grup Oluştur</button></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 divChatUser" id="divChats">
                        @* <div class="chatCard">
                        <div class="d-flex divDflex">
                        <span class="userName"></span>
                        <div class="ms-auto">
                        <small>00:00</small>
                        </div>
                        </div>
                        <div class="d-flex divDflex">
                        <div class="me-auto messajInfo">
                        <small><i class="fa-solid fa-check-double"></i>&emsp;</small>
                        <span></span>
                        </div>
                        </div>
                        </div>*@
                    </div>
                </div>
            </div>
            <div class="col-md-8 divChatRightRadius">
                <div class="row divTitle divTitleBackground">
                    <div class="col-md-8" id="divSelectedName"></div>
                    <div class="col-md-4">
                        <button class="btn btn-danger btn-sm" style="float:right" type="button" id="btnDeleteChat" disabled>Sohbeti Sil</button>
                    </div>
                </div>
                <div class="row divMessagesArea">
                    <div class="col-md-12 messageList" id="divMessageList">
                        @*<div class="d-flex">
                        <div class="me-auto divReceivedMessage">
                        <span class="messageSpan"></span>
                        <div class="divSmall"><small>00.00.0000 00:00</small></div>
                        </div>
                        </div>
                        <div class="d-flex">
                        <div class="ms-auto divSendMessage">
                        <span class="messageSpan"></span>
                        <div class="divSmall"><small>00:00</small></div>
                        </div>
                        </div>*@
                    </div>
                    <div class="col-md-12" style="position:relative">
                        <button id="scrollButton" title="Son mesaja git"><i class="fa-solid fa-arrow-down"></i></button>
                    </div>
                    <div class="col-md-12">
                        <div class="input-group">
                            <input type="text" class="form-control" id="txtMessage" required />
                            <button type="button" class="btn btn-outline-success btnSendMessage" id="btnSendMessage" disabled><i class="fa fa-paper-plane"></i></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-1"></div>
</div>


<div class="modal fade" id="mdlUserFriend" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Arkadaş Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="txtMdlUserFriendName" class="col-form-label">Adı</label>
                                <input type="text" class="form-control" id="txtMdlUserFriendName" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Telefon Numarası</label>
                                <input class="form-control" id="txtMdlUserFriendPhoneNumber" required />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnSaveUserFriend">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="mdlUserGroup" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Grup Oluştur</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="txtMdlUserGroupName" class="col-form-label">Grup Adı</label>
                                <input type="text" class="form-control" id="txtMdlUserGroupName" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Katılımcılar</label>
                                <div style="height:200px;overflow-y:auto" id="divMdlUserFriends"></div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnSaveUserGroup">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="mdlChatUserFriends" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Sohbet Başlat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="mdlUserFriends">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="mdlUserFriendWarning" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:red">Uyarı !</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <span id="spnMdlUserFriendName" style="font-weight:600"></span>
                        <span>&ensp;adlı arkadaşın uygulamayı kullanmadığı için mesaj atamazsın.</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="mdlChangeName" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Adı Değiştir</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="txtMdlName" class="col-form-label">Adı</label>
                            <input type="text" class="form-control" id="txtMdlName" required>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btnChangeName">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section Styles{
    <style>

    </style>
}

@section Scripts{
    <script src="~/js/site.js"></script>
    <script>
        $(document).ready(() => {
            let id = "", userName = "", phoneNumber = "";
            let selectedUserId = "", selectedGroupId = "", senderUserId = "";

            //#region Login

            id = window.localStorage.getItem("userId");
            userName = window.localStorage.getItem("userName");
            phoneNumber = window.localStorage.getItem("userPhoneNumber");

            if (id == "undefined" || id == null) {
                $("#divLogin").removeClass("hidden");
            }
            else {
                $("#divMain").removeClass("hidden");
                $("#spnUserName").text(userName);
                $("#spnUserName").closest("div").removeClass("hidden");
            }

            $("#btnLogin").click(() => {
                data = {
                    PhoneNumber: $("#txtPhoneNumber").val(),
                    Password: $("#txtPassword").val()
                }

                $.ajax({
                    type: 'POST',
                    url: apiAppLink + "api/User/Login",
                    dataType: "json",
                    data: JSON.stringify(data),
                    contentType: 'application/json; charset=utf8',
                    beforeSend: function () {

                    },
                    success: function (result) {

                        id = result.Id;
                        userName = result.Name;
                        phoneNumber = result.PhoneNumber;

                        window.localStorage.setItem("userId", id);
                        window.localStorage.setItem("userName", userName);
                        window.localStorage.setItem("userPhoneNumber", phoneNumber);

                        window.location.reload();
                    },
                    error: function (xhr) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(xhr.responseText);
                    },
                    async: true
                });
            });

            $("#btnRegister").click(() => {
                data = {
                    PhoneNumber: $("#txtPhoneNumberR").val(),
                    Name: $("#txtNameR").val(),
                    Password: $("#txtPasswordR").val()
                }

                $.ajax({
                    type: 'POST',
                    url: apiAppLink + "api/User/Create",
                    dataType: "json",
                    data: JSON.stringify(data),
                    contentType: 'application/json; charset=utf8',
                    beforeSend: function () {

                    },
                    success: function (result) {
                        window.localStorage.setItem("userId", result);
                        window.localStorage.setItem("userName", $("#txtNameR").val());
                        window.localStorage.setItem("userPhoneNumber", $("#txtPhoneNumberR").val());

                        window.location.reload();
                    },
                    error: function (xhr) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    async: true
                });
            });

            $("#aLogout").click(() => {
                window.localStorage.removeItem("userId");
                window.localStorage.removeItem("userName");
                window.localStorage.removeItem("userPhoneNumber");

                window.location.reload();
            });

            //#endregion Login

            $("#btnSaveUserFriend").click(() => {
                data = {
                    PhoneNumber: $("#txtMdlUserFriendPhoneNumber").val(),
                    Name: $("#txtMdlUserFriendName").val(),
                    UserId: id
                }

                $.ajax({
                    type: 'POST',
                    url: apiAppLink + "api/UserFriend/Create",
                    dataType: "json",
                    data: JSON.stringify(data),
                    contentType: 'application/json; charset=utf8',
                    beforeSend: function () {

                    },
                    success: function (result) {
                        $("#mdlUserFriend").modal("hide");
                        $("#txtMdlUserFriendPhoneNumber").val("");
                        $("#txtMdlUserFriendName").val("");

                        GetUserFriends(id);
                    },
                    error: function (xhr) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    async: true
                });
            });

            //#region SignalR ChatHub
            const connectionChatHub = new signalR.HubConnectionBuilder()
                .withUrl(apiAppLink + "ChatHub")
                .withAutomaticReconnect([1000, 2000, 3000, 4000, 5000])
                .build();

            async function startConnectionChatHub() {
                try {
                    await connectionChatHub.start();

                    if (id != "" && id != null)
                        connectionChatHub.invoke("AddClient", id).catch(error => console.log(error));

                    GetUserFriends(id);
                    GetUserChats(id);
                }
                catch (error) {
                    setTimeout(() => start(), 2000);
                }
            }

            startConnectionChatHub();

            function GetUserFriends(userId) {
                if (userId != "" && userId != null)
                    connectionChatHub.invoke("GetUserFriendsAsync", userId).catch(error => console.log(error));
            }

            function GetUserChats(userId) {
                if (userId != "" && userId != null)
                    connectionChatHub.invoke("GetUserChatsAsync", userId).catch(error => console.log(error));
            }

            function GetChatMessages(userId, friendUserId) {
                if (userId != "" && userId != null)
                    connectionChatHub.invoke("GetChatMessagesAsync", userId, friendUserId).catch(error => console.log(error));
            }

            function HasBeenReadChatMessagesAsync(userId, friendUserId) {
                if (userId != "" && userId != null)
                    connectionChatHub.invoke("HasBeenReadChatMessagesAsync", userId, friendUserId).catch(error => console.log(error));
            }

            function GetGroupChatMessages(userId, groupId) {
                if (userId != "" && userId != null)
                    connectionChatHub.invoke("GetGroupChatMessagesAsync", userId, groupId).catch(error => console.log(error));
            }

            connectionChatHub.on("UserFriends", result => {
                content = "";
                for (var i = 0; i < result.length; i++) {
                    content += '<div class="userFriendCard" userId="' + result[i].userId + '" userName="' + result[i].name + '">' +
                        '<div class="d-flex divDflex">' +
                        '<span>' + result[i].name + '</span>' +
                        '<div class="ms-auto">' +
                        '<small>' + result[i].phoneNumber + '</small>' +
                        '</div></div></div>';
                }

                if (content == "")
                    content = "Henüz arkadaşınız bulunmuyor.";

                $("#mdlUserFriends").html(content);
            });

            connectionChatHub.on("UserChats", result => {
                content = "";
                for (var i = 0; i < result.length; i++) {

                    content += '<div class="chatCard ' + (selectedUserId == result[i].id || selectedGroupId == result[i].id ? "activeChat " : "") + (result[i].isGroup ? "group" : "") + '" chatId="' + result[i].id + '" name="' + result[i].name + '">' +
                        '<div class="d-flex divDflex"> ' +
                        '<span class="userName">' + result[i].name + '</span>' +
                        '<div class="ms-auto">' +
                        '<small>' + dateMomentTimeOrDate(result[i].sendedDate) + '</small>' +
                        '</div>' +
                        '</div>' +
                        '<div class="d-flex divDflex" > ' +
                        '<div class="me-auto messajInfo" > ' +
                        '<small ' + (result[i].hasBeenRead ? 'style="color:#00ff00"' : "") + '>' + (result[i].isMyMessage ? '<i class="fa-solid fa-check-double"></i>&emsp;' : "") + '</small>' +
                        '<span>' + (result[i].isGroup ? (result[i].isMyMessage ? "Sen: " : (result[i].userName != "" ? result[i].userName + ": " : "")) : "") + result[i].lastMessage + '</span>' +
                        '</div></div></div>';
                }

                $("#divChats").html(content);
            });

            connectionChatHub.on("ChatMessages", result => {
                content = "";
                today = dateMoment(new Date());

                for (var i = 0; i < result.length; i++) {
                    content += '<div class="d-flex">' +
                        '<div class="' + (result[i].isMyMessage ? "ms-auto divSendMessage" : "me-auto divReceivedMessage") + '">' +
                        (!result[i].isMyMessage && result[i].userName != null ? '<span style="font-weight:700;color:lightblue">' + result[i].userName + '</span><br/>' : "") +
                        '<span class="messageSpan">' + result[i].message + '</span>' +
                        '<div class="divSmall"><small>' + dateMomentTimeOrDate(result[i].sendedDate) + '</small>' + (result[i].isMyMessage ? '&ensp;<small ' + (result[i].hasBeenRead ? 'style="color:#00ff00"' : "") + '><i class="fa-solid fa-check-double"></i></small>' : "") + '</div></div></div>';
                }

                $("#divMessageList").html(content).animate({ scrollTop: $('#divMessageList').get(0).scrollHeight }, 1);
            });

            connectionChatHub.on("ReceivedMessage", messageInfo => {
                senderUserId = messageInfo.senderUserId;

                sender = id == messageInfo.senderUserId;

                if (selectedUserId == messageInfo.receiverUserId || selectedUserId == messageInfo.senderUserId) {
                    content = '<div class="d-flex">' +
                        '<div class="' + (sender ? "ms-auto divSendMessage" : "me-auto divReceivedMessage") + '">' +
                        '<span class="messageSpan">' + messageInfo.message + '</span>' +
                        '<div class="divSmall"><small>' + dateMomentHour(messageInfo.sendedDate) + '</small>' + (sender ? '&ensp;<small ' + (messageInfo.hasBeenRead ? 'style="color:#00ff00"' : "") + '><i class="fa-solid fa-check-double"></i></small>' : "") + '</div></div></div>';

                    $("#divMessageList").append(content);
                    scrollMessages();

                    HasBeenReadChatMessagesAsync(id, selectedUserId);
                }

                if (selectedGroupId == messageInfo.chatId) {
                    content = '<div class="d-flex">' +
                        '<div class="' + (sender ? "ms-auto divSendMessage" : "me-auto divReceivedMessage") + '">' +
                        (!sender ? '<span style="font-weight:700;color:lightblue">' + messageInfo.userName + '</span><br/>' : "") +
                        '<span class="messageSpan">' + messageInfo.message + '</span>' +
                        '<div class="divSmall"><small>' + dateMomentHour(messageInfo.sendedDate) + '</small>' + (sender ? '&ensp;<small ' + (messageInfo.hasBeenRead ? 'style="color:#00ff00"' : "") + '><i class="fa-solid fa-check-double"></i></small>' : "") + '</div></div></div>';

                    $("#divMessageList").append(content);
                    scrollMessages();

                    //HasBeenReadChatMessagesAsync(id, selectedGroupId);
                }

                if (!sender)
                    PlayNotificationSound();

                GetUserChats(id);
            });

            connectionChatHub.on("Refresh", () => {

                GetUserChats(id);

                GetChatMessages(id, selectedUserId);
            });

            $("#btnSendMessage").click(function () {
                message = $("#txtMessage").val();

                if ($.trim(message) != "") {

                    if (selectedGroupId == "") {
                        data = {
                            SenderUserId: id,
                            ReceiverUserId: selectedUserId,
                            Message: message
                        };

                        connectionChatHub.invoke("SendMessageAsync", data).catch(error => console.log(error));
                    }
                    else {
                        data = {
                            UserId: id,
                            GroupId: selectedGroupId,
                            Message: message
                        };

                        connectionChatHub.invoke("SendGroupMessageAsync", data).catch(error => console.log(error));
                    }

                    $("#txtMessage").val("");

                    //GetUserChats(id);
                }
            });
            //#endregion SignalR ChatHub

            $(document).on("click", ".userFriendCard", function () {
                friendUserId = $(this).attr("userId");
                friendUserName = $(this).attr("userName");

                if (friendUserId == "null") {
                    $("#mdlUserFriendWarning").modal("show");
                    $("#spnMdlUserFriendName").html($(this).attr("userName"));
                }
                else {
                    selectedUserId = friendUserId;

                    $("#mdlChatUserFriends").modal("hide");
                    $("#divSelectedName").html(friendUserName);
                    $("#btnSendMessage").prop("disabled", false);
                    $("#divMessageList").html("");
                    $(".chatCard[chatId='" + selectedUserId + "']").click();
                }
            });

            $(document).on("click", ".chatCard", function () {
                $(".chatCard").each(function () {
                    $(this).removeClass("activeChat");
                });

                $(this).addClass("activeChat");

                chatId = $(this).attr("chatId");
                name = $(this).attr("name");

                $("#divSelectedName").html(name);
                $("#btnSendMessage").prop("disabled", false);
                $("#btnDeleteChat").prop("disabled", false);
                $("#divMessageList").html("");

                selectedUserId = selectedGroupId = "";

                if (!$(this).hasClass("group")) {
                    selectedUserId = chatId;

                    GetChatMessages(id, selectedUserId);

                    if ($("#divMessageList > div").last().children("div").hasClass("divReceivedMessage"))
                        HasBeenReadChatMessagesAsync(id, selectedUserId);
                }
                else {
                    selectedGroupId = chatId;

                    GetGroupChatMessages(id, selectedGroupId);

                    //HasBeenReadGroupChatMessagesAsync(id, selectedGroupId);
                }
            });

            $("#btnDeleteChat").click(function () {
                data = {
                    UserId: id,
                    FriendUserId: selectedUserId
                }

                //$.ajax({
                //    type: 'POST',
                //    url: apiAppLink + "api/UserChatMessage/Delete",
                //    dataType: "json",
                //    data: JSON.stringify(data),
                //    contentType: 'application/json; charset=utf8',
                //    beforeSend: function () {

                //    },
                //    success: function (result) {

                //        GetUserChats(id);
                //    },
                //    error: function (xhr) {
                //        var err = eval("(" + xhr.responseText + ")");
                //        alert(err.Message);
                //    },
                //    async: true
                //});
            });

            $("#mdlUserGroup").on("show.bs.modal", function () {
                $.ajax({
                    type: 'GET',
                    url: apiAppLink + "api/UserFriend/GetFriends/" + id,
                    dataType: "json",
                    contentType: 'application/json; charset=utf8',
                    beforeSend: function () {

                    },
                    success: function (result) {
                        content = "";
                        for (var i = 0; i < result.length; i++) {
                            content += "<label for='chk_" + result[i].Id + "' style='cursor:pointer;'><input class='chkGroupUser' type='checkbox' value='" + result[i].Id + "' id='chk_" + result[i].Id + "' style='cursor:pointer;'/>&emsp;" + result[i].Name + " - " + result[i].PhoneNumber + "</label>";
                        }
                        $('#divMdlUserFriends').html(content);
                    },
                    error: function (xhr) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    async: true
                });
            });

            $("#btnSaveUserGroup").click(function () {
                groupName = $("#txtMdlUserGroupName").val();
                groupUserIds = [];

                $(".chkGroupUser:checked").each(function () {
                    groupUserIds.push($(this).val());
                });

                if (groupUserIds.length < 1 || groupName == "")
                    alert("Lütfen bilgileri doldurunuz");

                data = {
                    UserId: id,
                    Name: groupName,
                    UserIds: groupUserIds
                };
                $.ajax({
                    type: 'POST',
                    url: apiAppLink + "api/Group/Create",
                    dataType: "json",
                    data: JSON.stringify(data),
                    contentType: 'application/json; charset=utf8',
                    beforeSend: function () {

                    },
                    success: function (result) {
                        GetUserChats(id);
                    },
                    error: function (xhr) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    async: true
                });
            })

            //#region Scroll

            function scrollMessages() {
                $('#divMessageList').animate({ scrollTop: $('#divMessageList').get(0).scrollHeight }, 1000);
            }

            let scrollButton = document.getElementById("scrollButton");

            messageDivScroll = $('#divMessageList').get(0);

            startPosition = 600;

            messageDivScroll.onscroll = function () { scrollFunction() };

            function scrollFunction() {
                if (messageDivScroll.scrollHeight - messageDivScroll.scrollTop > startPosition) {
                    scrollButton.style.display = "block";
                } else {
                    scrollButton.style.display = "none";
                }
            }

            $("#scrollButton").click(function () {
                scrollMessages();
            });
            //#endregion Scroll
        });
    </script>
}